// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16], load, inc, reset;
    OUT out[16];

    PARTS:
    Not16(in=true, out=zero); // set up zero for output

    // choose current count based on load
    Mux16(a=prevcount, b=in, sel=load, out=count);
    Inc16(in=count, out=inccount); // set up increment for output

    // 3 way if statement, bits are "inc, load, reset"
    Mux8Way16(
        a=prevcount, // 000, out emits prev count
        b=zero, // 001, reset, out emits zero
        c=in, // 010, load, out emits input
        d=zero, // 011, reset, out emits zero
        e=inccount, // 100, inc, out emits input
        f=zero, // 101, reset, out emits zero
        g=in, // 110, load, out emits input
        h=zero, // 111, reset, out emits zero
        sel[0]=reset,
        sel[1]=load,
        sel[2]=inc,
        out=temp);

    // give sense of time 
    Register(in=temp, load=true, out=out, out=prevcount);
}
